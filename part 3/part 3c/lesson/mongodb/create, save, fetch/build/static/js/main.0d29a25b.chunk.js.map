{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filter","handleFilterChange","value","onChange","autoFocus","PersonForm","newName","newNumber","handlePersonChange","handleNumberChange","addNote","onSubmit","type","Persons","person","Temp","persons","setPerson","setPersons","map","name","number","onClick","window","confirm","personService","t","p","App","useState","setNewName","setNewNumber","setFilter","useEffect","e","toUpperCase","indexOf","target","filteredName","preventDefault","includes","alert","find","console","log","concat","length","temp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d29a25b.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = `/api/persons`\n\nconst getAll = () => {\n    const response = axios.get(baseUrl)\n    return response.then(response => response.data)\n}\n\nconst create = newObject => {\n    const response = axios.post(baseUrl, newObject)\n    return response.then(response => response.data)\n}\n\nconst deletePerson = id => {\n\tconst response = axios.delete(`${baseUrl}/${id}`)\n\treturn response.then(response => response.data)\n}\n\nconst updatePhoneNumber = (id, newObject) => {\n  const response = axios.put(`${baseUrl}/${id}`, newObject)\n  return response.then(response => response.data)\n}\n\nexport default  { getAll, create, deletePerson, updatePhoneNumber }\n","import React from 'react'\n\nconst Filter = ({ filter, handleFilterChange}) => {\n    return (\n        <div>\n            filter shown with <input value={filter} onChange={handleFilterChange} autoFocus />\n        </div>    \n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ newName, newNumber, handlePersonChange, handleNumberChange, addNote }) => {\n    return (\n        <div>\n            <form onSubmit={addNote}>\n            <div>\n            name: <input\n                value={newName}\n                onChange={handlePersonChange}\n            />\n            </div>\n            <div>\n            number: <input\n                value={newNumber}\n                onChange={handleNumberChange}\n            />\n            </div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n        </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ person }) => {\n\n    return (\n        <div>\n            {person}\n        </div>\n    )\n    // if (persons) {\n    //     let temp\n    //     temp = (\n    //         persons.map(person => {\n    //         //   console.log(\"person\", person)\n    //           // return <Persons key={person.id} person={person} />\n    //           return <p key={person.id}>{person.name} {person.number} <button key={person.id} >delete</button></p>\n              \n    //         }))\n    //     return (\n    //         <div>\n    //             {temp}\n    //             {/* {person} */}\n    //             {/* <p>{person.name} {person.number} <button key={person.id} >delete</button></p> */}\n    \n    //         </div>\n    //     )\n\n    // } else {\n    //     return (\n    //         <div>\n    //             none person\n    //         </div>\n    //     )\n    // }\n}\n\nexport default Persons","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\n\nconst Temp = ({ persons, setPerson, setPersons }) => {\n\n\n  return (\n\n          persons.map(person => (\n            <p\n              key={person.id}\n            >{person.name} {person.number} <button\n                                              key={person.id}\n                                              onClick={() => {\n                                                if (window.confirm(`Delete ${person.name} ?`)) {\n                                                  personService\n                                                    .deletePerson(person.id)\n\n                                                  let t = persons.filter(p => p.id !== person.id)\n                                                  setPersons(t)\n                                                  let temp\n                                                  temp = <Temp persons={t}  setPerson={setPerson} setPersons={setPersons} />\n                                                  setPerson(temp)\n        \n                                                }\n                                              }}\n                                            >delete\n                                            </button>\n              </p>\n            ))\n          )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState(null)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [person, setPerson] = useState(null)\n\n  const addNote = (e) => {\n    const name = persons.map(person => person.name)\n    const number = persons.map(person => person.number)\n\n    e.preventDefault()\n\n    if (number.includes(newNumber)) {\n      alert(`${newNumber} is already exist.`)\n      return false\n    }\n\n    if (name.includes(newName)) {\n    const person = persons.find(person => person.name === newName)\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)) {\n        console.log(\"newName\", newName)\n        console.log(\"person\", person)\n\n        const newObject = {\n          ...person,\n          number: newNumber\n        }\n\n        console.log(\"newNumber\", newNumber)\n        console.log(\"newObject\", newObject)\n\n        personService\n          .updatePhoneNumber(person.id, newObject)\n          .then(response => {\n            console.log(response)\n\n        })\n\n\n        let t = persons.filter(p => p.id !== person.id).concat(newObject)\n        console.log(\"t\", t)\n\n        setPersons(t)\n        let temp\n        temp = <Temp persons={t}  setPerson={setPerson} setPersons={setPersons} />\n        setPerson(temp)\n        \n        setNewName(\"\")\n        setNewNumber(\"\")\n\n\n      }\n\n      // return false\n    } else {\n\n\n    const newObject = {\n      id: persons.length + 1,\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(newObject)\n\n    setPersons(persons.concat(newObject))\n\n\n    console.log(\"persons\", persons);\n    console.log('persons.concat(newObject)', persons.concat(newObject))\n\n    let temp = <Temp persons={persons.concat(newObject)} setPerson={setPerson} setPersons={setPersons} />\n    // let temp = <Temp persons={persons.concat(newObject)} setPerson={setPerson} setPersons={setPersons} />\n\n    // let temp = () => persons.concat(newObject).map(person => (<p key={person.id}>{person.name} {person.number} <button>delete</button></p>))\n    setPerson(temp)\n    setNewName(\"\")\n    setNewNumber(\"\")\n\n    }\n  }\n\n  // const handleDeletePerson = id => {\n  //   if (persons) {\n  //     let temp = persons.filter(person => person.id !== id)\n  //     console.log(temp);\n\n  //   }\n  // }\n\n  const handlePersonChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFilterChange = (e) => {\n    setPerson(() =>\n      persons.filter(\n        person => (\n          person.name.toUpperCase().indexOf(e.target.value.toUpperCase()) > -1)\n        )\n        .map(\n          filteredName => (\n            // <p key={filteredName.id}>{filteredName.name} {filteredName.number} <button>delete</button></p>\n            <Temp key={filteredName.id} persons={[ filteredName]} setPerson={setPerson} setPersons={setPersons} />\n            // <Temp key={filteredName.id} persons={[ filteredName]} setPerson={setPerson} setPersons={setPersons} />\n            // <p key={filteredName.id}>{filteredName.name} {filteredName.number} <button>delete</button></p>\n          )\n      )\n    )\n    setFilter(e.target.value)\n  }\n\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n\n        let temp\n        temp = <Temp persons={persons} setPerson={setPerson} setPersons={setPersons} />\n        // temp = <Temp persons={persons} setPerson={setPerson} setPersons={setPersons} />\n         // temp = (\n         //  persons.map(person => {\n\n         //    console.log(\"person\", person)\n         //    // return <Persons key={person.id} person={person} />\n         //    return <p key={person.id}>{person.name} {person.number} <button key={person.id} >delete</button></p>\n\n         //  }))\n\n        setPerson(temp)\n        // setPerson(persons)\n\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n      <h3>add a new</h3>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handlePersonChange={handlePersonChange}\n        handleNumberChange={handleNumberChange}\n        addNote={addNote}\n      />\n\n      <h3>Numbers</h3>\n      <Persons\n        person={person}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import axios from 'axios'\n\n// const promise = axios.get('http://localhost:3001/notes')\n// promise.then(response => {\n//   const data = response.data\n//   console.log(data)\n// })\n// axios\n//   .get(\"http://localhost:3001/notes\")\n//   .then(response => {\n//     const notes = response.data\n//     console.log(notes);\n//   })\n\n\n// const promise2 = axios.get('http://localhost:3001/foobar')\n// console.log(promise2)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}