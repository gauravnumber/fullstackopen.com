{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","useEffect","noteService","map","find","changedNote","console","log","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","returnedNote","concat","value","onChange","e","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAE7B,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QADV,KACoB,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCP1DK,EAAU,kCAiBD,EAfA,WAEd,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa3B,EAVA,SAACC,GAEZ,OADaL,IAAMM,KAAKP,EAASM,GAClBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADaL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC5BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCqF9BK,G,MA9FH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAqDVC,EAAcF,EAAUJ,EAAQA,EAAMO,QAAO,SAAA1B,GAAI,OAAuB,IAAnBA,EAAKG,aAehE,OAdAwB,qBAAU,WAORC,IAEGlB,MAAK,SAAAC,GAAQ,OAAIS,EAAST,QAC5B,IAKD,gCACE,uCACA,8BACE,yBAAQL,QAAS,kBAAMkB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGE,EAAYI,KAAI,SAAA7B,GAAI,OACnB,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA5ED,SAAAc,GAEzB,IAAMf,EAAOmB,EAAMW,MAAK,SAAA9B,GAAI,OAAIA,EAAKe,KAAOA,KACtCgB,EAAW,2BAAQ/B,GAAR,IAAcG,WAAYH,EAAKG,YAEhDyB,EACUb,EAAIgB,GACXrB,MAAK,SAAAC,GACJS,EAASD,EAAMU,KAAI,SAAA7B,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAOW,SAUvDqB,QAAQC,IAAI,iBAAmBlB,EAAK,wBA0DJmB,CAAmBlC,EAAKe,MAF3Cf,EAAKe,SAMhB,uBAAMoB,SA1DM,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAa,CACjBjC,QAASgB,EACTkB,MAAM,IAAIC,MAAOC,cACjBtC,UAAWuC,KAAKC,SAAW,GAC3B5B,GAAII,EAAMyB,OAAS,GAGrBhB,EACUU,GACP5B,MAAK,SAAAmC,GACJzB,EAASD,EAAM2B,OAAOR,IACtBhB,EAAW,QA4Cb,UACE,uBAAOyB,MAAO1B,EAAS2B,SAAU,SAAAC,GAAC,OAAI3B,EAAW2B,EAAEC,OAAOH,UAC1D,wBAAQI,KAAK,SAAb,0BCvERC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3ebc75e3.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n    const label = note.important\n        ? 'make not important' : 'make important'\n\n    return (\n        <li className=\"note\">\n            {note.content}  <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n}\n\n\nexport default Note\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/notes'\n\nconst getAll = () => {\n\tconst request = axios.get(baseUrl)\n\treturn request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n\tconst request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n\tconst request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport './index.css'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  const toggleImportanceOf = id => {\n    // const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(note => note.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(response => {\n        setNotes(notes.map(note => note.id !== id ? note : response))\n      })\n\n\n    // axios\n    //   .put(url, changedNote)\n    //   .then(res => {\n    //     console.log('res.data', res.data)\n    //     setNotes(notes.map(note => note.id !== id ? note : res.data))\n    //   })\n    console.log('importance of ' + id + ' needs to be toggled')\n  }\n\n\n  const addNote = (event) => {\n    event.preventDefault()\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(noteObject))\n        setNewNote(\"\")\n      })\n\n  //   axios\n  //     .post('http://localhost:3001/notes', noteObject)\n  //     .then(response => {\n  //       // console.log(response)\n  //       setNotes(notes.concat(noteObject))\n  //       setNewNote('')\n  //     })\n  }\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important === true)\n  useEffect(() => {\n    // axios\n    //   .get(`http://localhost:3001/notes`)\n    //   .then(response => {\n    //     setNotes(response.data)\n    //   })\n\n    noteService\n      .getAll()\n      .then(response => setNotes(response))\n  }, [])\n\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map(note =>\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={e => setNewNote(e.target.value)} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n    )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import axios from 'axios'\n\n// const promise = axios.get('http://localhost:3001/notes')\n// promise.then(response => {\n//   const data = response.data\n//   console.log(data)\n// })\n// axios\n//   .get(\"http://localhost:3001/notes\")\n//   .then(response => {\n//     const notes = response.data\n//     console.log(notes);\n//   })\n\n\n// const promise2 = axios.get('http://localhost:3001/foobar')\n// console.log(promise2)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}