{"version":3,"sources":["services/persons.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/PersonHolder.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filter","handleFilterChange","value","onChange","autoFocus","PersonForm","newName","newNumber","handlePersonChange","handleNumberChange","addNote","onSubmit","type","Persons","person","PersonHolder","persons","setPerson","setPersons","setErrorMessage","setNotificationType","map","name","number","onClick","window","confirm","personService","catch","error","console","log","t","p","Notification","message","className","App","useState","setNewName","setNewNumber","setFilter","errorMessage","notificationType","useEffect","e","toUpperCase","indexOf","target","filteredName","preventDefault","includes","alert","find","concat","length","createdPerson","temp","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.254611c7.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = `/api/persons`\n\nconst getAll = () => {\n    const response = axios.get(baseUrl)\n    return response.then(response => response.data)\n}\n\nconst create = newObject => {\n    const response = axios.post(baseUrl, newObject)\n    return response.then(response => response.data)\n}\n\nconst deletePerson = id => {\n\tconst response = axios.delete(`${baseUrl}/${id}`)\n\treturn response.then(response => response.data)\n}\n\nconst updatePhoneNumber = (id, newObject) => {\n  const response = axios.put(`${baseUrl}/${id}`, newObject)\n  return response.then(response => response.data)\n}\n\nexport default  { getAll, create, deletePerson, updatePhoneNumber }\n","import React from 'react'\n\nconst Filter = ({ filter, handleFilterChange}) => {\n    return (\n        <div>\n            filter shown with <input value={filter} onChange={handleFilterChange} autoFocus />\n        </div>    \n    )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ newName, newNumber, handlePersonChange, handleNumberChange, addNote }) => {\n    return (\n        <div>\n            <form onSubmit={addNote}>\n            <div>\n            name: <input\n                value={newName}\n                onChange={handlePersonChange}\n            />\n            </div>\n            <div>\n            number: <input\n                value={newNumber}\n                onChange={handleNumberChange}\n            />\n            </div>\n            <div>\n            <button type=\"submit\">add</button>\n            </div>\n        </form>\n        </div>\n    )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ person }) => {\n\n    return (\n        <div>\n            {person}\n        </div>\n    )\n}\n\nexport default Persons","import React from 'react'\nimport personService from '../services/persons'\n\nconst PersonHolder = ({ persons, setPerson, setPersons, setErrorMessage, setNotificationType }) => {\n\n  return (\n\n          persons.map(person => (\n            <p\n              key={person.id}\n            >{person.name} {person.number} <button\n                                              key={person.id}\n                                              onClick={() => {\n                                                if (window.confirm(`Delete ${person.name} ?`)) {\n                                                  personService\n                                                    .deletePerson(person.id)\n                                                    .catch(error => {\n                                                      console.log(\"error\", error)\n\n                                                      setErrorMessage(`Information of ${person.name} has already been removed from server`)\n\n                                                      console.log(typeof setErrorMessage)\n                                                      setNotificationType(\"error\")\n\n                                                    })\n\n                                                  let t = persons.filter(p => p.id !== person.id)\n                                                  setPersons(t)\n                                                  let temp\n                                                  temp = <PersonHolder persons={t}  setPerson={setPerson} setPersons={setPersons} />\n                                                  setPerson(temp)\n        \n                                                }\n                                              }}\n                                            >delete\n                                            </button>\n              </p>\n            ))\n          )\n}\n\nexport default PersonHolder\n","import React from 'react'\n// import '../index.css'\n\n\nexport default function Notification ({ message, type }) {\n\tif (message === null) {\n\t\treturn null\n\t}\n\t// console.log(\"typeof type\", typeof type)\n\n\t// if (type === \"error\") {\t\t\n\t// \treturn (\n\t// \t\t<div className=\"error\">\n\t// \t\t\t{message}\n\t// \t\t</div>\n\t// \t)\n\t// } else if (type === \"added\") {\n\t// \treturn (\n\t// \t\t<div className=\"added\">\n\t// \t\t\t{message}\n\t// \t\t</div>\n\t// \t)\n\t// }\n\n\n\treturn (\n\t\t<div className={type}>\n\t\t\t{message}\n\t\t</div>\n\t)\n\n\t// return (\n\t// \t<div></div>\n\t// )\n}","import React, { useState, useEffect } from 'react'\n// import axios from 'axios'\nimport personService from './services/persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport PersonHolder from './components/PersonHolder'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState(null)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [person, setPerson] = useState(null)\n\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState(null)\n\n  const addNote = (e) => {\n    const name = persons.map(person => person.name)\n    const number = persons.map(person => person.number)\n\n    e.preventDefault()\n\n    if (number.includes(newNumber)) {\n      alert(`${newNumber} is already exist.`)\n      return false\n    }\n\n    if (name.includes(newName)) {\n      const person = persons.find(person => person.name === newName)\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)) {\n        // console.log(\"newName\", newName)\n        // console.log(\"person\", person)\n\n        const newObject = {\n          ...person,\n          number: newNumber\n        }\n\n        // console.log(\"newNumber\", newNumber)\n        // console.log(\"newObject\", newObject)\n\n        personService\n          .updatePhoneNumber(person.id, newObject)\n          .then(response => {\n            // console.log(response)\n\n          })\n\n\n        let t = persons.filter(p => p.id !== person.id).concat(newObject)\n        // console.log(\"t\", t)\n\n        setPersons(t)\n        let temp\n        temp = <PersonHolder\n          persons={t}\n          setPerson={setPerson}\n          setPersons={setPersons}\n          setErrorMessage={setErrorMessage}\n          setNotificationType={setNotificationType}\n        />\n        setPerson(temp)\n\n        setNewName(\"\")\n        setNewNumber(\"\")\n\n\n      }\n\n\n    } else {\n\n\n      const newObject = {\n        id: persons.length + 1,\n        name: newName,\n        number: newNumber\n      }\n\n      personService\n        .create(newObject)\n        .then(createdPerson => {\n          setPersons(persons.concat(newObject))\n          let temp = <PersonHolder\n            persons={persons.concat(newObject)}\n            setPerson={setPerson}\n            setPersons={setPersons}\n            setErrorMessage={setErrorMessage}\n            setNotificationType={setNotificationType}\n          />\n\n          setErrorMessage(`Added ${newName}`)\n          setNotificationType(\"added\")\n          setTimeout(() => {\n            setErrorMessage(null)\n\n          }, 2000)\n\n\n          setPerson(temp)\n          setNewName(\"\")\n          setNewNumber(\"\")\n\n\n          console.log('createdPerson', createdPerson);\n        })\n        .catch(error => {\n          console.log('typeof error', error);\n          console.log('typeof error.response.data.error', error.response.data.error);\n          setErrorMessage(error.response.data.error)\n          setNotificationType('error')\n          setNewName(\"\")\n          setNewNumber(\"\")\n\n          // console.log(error.response.data);\n        })\n\n      // setPersons(persons.concat(newObject))\n\n\n      // console.log(\"persons\", persons);\n      // console.log('persons.concat(newObject)', persons.concat(newObject))\n\n      // let temp = <PersonHolder\n      //   persons={persons.concat(newObject)}\n      //   setPerson={setPerson}\n      //   setPersons={setPersons}\n      //   setErrorMessage={setErrorMessage}\n      //   setNotificationType={setNotificationType}\n      // />\n\n      // setErrorMessage(`Added ${newName}`)\n      // setNotificationType(\"added\")\n      // setTimeout(() => {\n      //   setErrorMessage(null)\n\n      // }, 2000)\n\n\n      // setPerson(temp)\n      // setNewName(\"\")\n      // setNewNumber(\"\")\n\n    }\n\n\n  }\n\n  const handlePersonChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const handleFilterChange = (e) => {\n    setPerson(() =>\n      persons.filter(\n        person => (\n          person.name.toUpperCase().indexOf(e.target.value.toUpperCase()) > -1)\n      )\n        .map(\n          filteredName => (\n\n            <PersonHolder\n              key={filteredName.id}\n              persons={[filteredName]}\n              setPerson={setPerson}\n              setPersons={setPersons}\n              setErrorMessage={setErrorMessage}\n              setNotificationType={setNotificationType}\n            />\n\n\n          )\n        )\n    )\n    setFilter(e.target.value)\n  }\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n\n        let temp\n        temp = <PersonHolder\n          persons={persons}\n          setPerson={setPerson}\n          setPersons={setPersons}\n          setErrorMessage={setErrorMessage}\n          setNotificationType={setNotificationType}\n        />\n        setPerson(temp)\n      })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} type={notificationType} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n\n      <h3>add a new</h3>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handlePersonChange={handlePersonChange}\n        handleNumberChange={handleNumberChange}\n        addNote={addNote}\n      />\n\n      <h3>Numbers</h3>\n      <Persons\n        person={person}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// import axios from 'axios'\n\n// const promise = axios.get('http://localhost:3001/notes')\n// promise.then(response => {\n//   const data = response.data\n//   console.log(data)\n// })\n// axios\n//   .get(\"http://localhost:3001/notes\")\n//   .then(response => {\n//     const notes = response.data\n//     console.log(notes);\n//   })\n\n\n// const promise2 = axios.get('http://localhost:3001/foobar')\n// console.log(promise2)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}